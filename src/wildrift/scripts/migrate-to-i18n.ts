import { NestFactory } from '@nestjs/core';
import { AppModule } from '../../app.module';
import { getModelToken } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { WrChampion } from '../schemas/wr-champion.schema';

async function migrateToI18n() {
  const app = await NestFactory.createApplicationContext(AppModule);

  try {
    console.log('üöÄ B·∫Øt ƒë·∫ßu migration ƒë·ªÉ th√™m field lang cho WrChampions...\n');

    const wrChampionModel = app.get<Model<WrChampion>>(
      getModelToken(WrChampion.name),
    );

    // L·∫•y t·∫•t c·∫£ champions ch∆∞a c√≥ field lang
    const championsWithoutLang = await wrChampionModel
      .find({ lang: { $exists: false } })
      .lean();

    console.log(
      `üìä T√¨m th·∫•y ${championsWithoutLang.length} champions c·∫ßn c·∫≠p nh·∫≠t lang field\n`,
    );

    if (championsWithoutLang.length === 0) {
      console.log('‚úÖ T·∫•t c·∫£ champions ƒë√£ c√≥ field lang r·ªìi!');
      return;
    }

    let successCount = 0;
    let errorCount = 0;

    for (const champion of championsWithoutLang) {
      try {
        // C·∫≠p nh·∫≠t lang = 'en' v√¨ d·ªØ li·ªáu hi·ªán t·∫°i l√† ti·∫øng Anh
        await wrChampionModel.findByIdAndUpdate(champion._id, {
          lang: 'en',
        });

        console.log(`‚úÖ ƒê√£ c·∫≠p nh·∫≠t lang=en cho: ${champion.name}`);
        successCount++;
      } catch (error) {
        console.error(`‚ùå L·ªói khi c·∫≠p nh·∫≠t ${champion.name}:`, error.message);
        errorCount++;
      }
    }

    console.log('\nüìà K·∫æT QU·∫¢ MIGRATION:');
    console.log(`‚úÖ Th√†nh c√¥ng: ${successCount}`);
    console.log(`‚ùå L·ªói: ${errorCount}`);
    console.log(`üìä T·ªïng: ${championsWithoutLang.length}`);

    // Ki·ªÉm tra k·∫øt qu·∫£
    const enChampions = await wrChampionModel.countDocuments({ lang: 'en' });
    const totalChampions = await wrChampionModel.countDocuments({});

    console.log('\nüìä TH·ªêNG K√ä SAU MIGRATION:');
    console.log(`üá∫üá∏ Champions ti·∫øng Anh: ${enChampions}`);
    console.log(`üìã T·ªïng champions: ${totalChampions}`);
  } catch (error) {
    console.error('‚ùå L·ªói t·ªïng qu√°t:', error);
  } finally {
    await app.close();
  }
}

migrateToI18n();
