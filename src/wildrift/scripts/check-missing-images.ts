import { NestFactory } from '@nestjs/core';
import { AppModule } from '../../app.module';
import { getModelToken } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { WrChampion } from '../schemas/wr-champion.schema';

async function checkMissingImages() {
  const app = await NestFactory.createApplicationContext(AppModule);

  try {
    console.log('üñºÔ∏è ƒêang ki·ªÉm tra imageUrl c·ªßa WrChampion...\n');

    // L·∫•y model tr·ª±c ti·∫øp t·ª´ dependency injection
    const wrChampionModel = app.get<Model<WrChampion>>(
      getModelToken(WrChampion.name),
    );

    // L·∫•y t·∫•t c·∫£ champions
    const champions = await wrChampionModel.find({}).lean();
    console.log(`üìä T·ªïng s·ªë champions: ${champions.length}\n`);

    const missingImages = [];

    champions.forEach((champion) => {
      // Ki·ªÉm tra imageUrl
      if (!champion.imageUrl || champion.imageUrl.trim() === '') {
        missingImages.push({
          _id: champion._id,
          name: champion.name,
          currentImageUrl: champion.imageUrl || 'null',
        });
      }
    });

    console.log('üîç B√ÅO C√ÅO IMAGEURL THI·∫æU:\n');
    console.log(`‚ùå Champions thi·∫øu imageUrl: ${missingImages.length}\n`);

    if (missingImages.length > 0) {
      missingImages.forEach((champion) => {
        console.log(`  - ${champion.name} (ID: ${champion._id})`);
        console.log(`    Current imageUrl: ${champion.currentImageUrl}`);
      });

      console.log('\nüìà TH·ªêNG K√ä:');
      console.log(
        `‚úÖ Champions c√≥ imageUrl: ${champions.length - missingImages.length}`,
      );
      console.log(`‚ùå Champions thi·∫øu imageUrl: ${missingImages.length}`);
      console.log(
        `üìä T·ª∑ l·ªá ho√†n thi·ªán: ${(((champions.length - missingImages.length) / champions.length) * 100).toFixed(1)}%`,
      );

      console.log('\nüéØ DANH S√ÅCH C·∫¶N FIX:');
      missingImages.forEach((champion) => {
        console.log(`  - ${champion.name}`);
      });
    } else {
      console.log('‚úÖ T·∫•t c·∫£ champions ƒë·ªÅu c√≥ imageUrl!');
    }
  } catch (error) {
    console.error('‚ùå L·ªói khi ki·ªÉm tra imageUrl:', error);
  } finally {
    await app.close();
  }
}

checkMissingImages();
